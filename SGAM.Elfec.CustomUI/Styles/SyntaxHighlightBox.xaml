<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Toolkit="clr-namespace:System.Windows.Controls;assembly=System.Windows.Controls.Input.Toolkit"
                    xmlns:sgam="clr-namespace:SGAM.Elfec.CustomUI" 
                    xmlns:syntax="clr-namespace:AurelienRibon.Ui.SyntaxHighlightBox;assembly=AurelienRibon.Ui.SyntaxHighlightBox"
                    xmlns:System="clr-namespace:System;assembly=mscorlib">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/SGAM.Elfec.CustomUI;component/Styles/Brushes.xaml" />
        <ResourceDictionary Source="/SGAM.Elfec.CustomUI;component/Styles/TextBox.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <Style x:Key="SyntaxHighlightBoxStyle" TargetType="{x:Type syntax:SyntaxHighlightBox}" >
        <Setter Property="Background" Value="White" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="BorderBrush" Value="DimGray" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Height" Value="32" />
        <Setter Property="Padding" Value="4,6,4,2" />
        <Setter Property="ContextMenu" Value="{StaticResource TextBoxContextMenu}" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="IsLineNumbersMarginVisible" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type syntax:SyntaxHighlightBox}">
                    <!--Visual-->
                    <Border x:Name="Border" SnapsToDevicePixels="True" Background="{TemplateBinding Background}"
                        BorderBrush="{StaticResource TextBoxBorderBrush}" 
                        Padding="{TemplateBinding Padding}" 
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>

                            <syntax:DrawingControl x:Name="PART_LineNumbersCanvas" Grid.Column="0" ClipToBounds="True" />

                            <Line Grid.Column="1" Margin="2,0,5,0" Stroke="Gray" StrokeThickness="1" Y2="1" Stretch="Fill"
                            StrokeDashArray="1,1" RenderOptions.EdgeMode="Aliased" x:Name="lineNumbersSeparator" />

                            <Grid Grid.Column="2" >
                                <!--Render canvas-->
                                <Grid Margin="{TemplateBinding Padding}" VerticalAlignment="Bottom">
                                    <syntax:DrawingControl x:Name="PART_RenderCanvas" ClipToBounds="True"
                                    TextOptions.TextRenderingMode="ClearType" TextOptions.TextFormattingMode="Display" />
                                </Grid>
                                <!--Transparent input textbox-->
                                <ScrollViewer x:Name="PART_ContentHost" Background="#00FFFFFF" />

                            </Grid>

                        </Grid>
                    </Border>

                    <!--Triggers-->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsLineNumbersMarginVisible" Value="false">
                            <Setter TargetName="PART_LineNumbersCanvas" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="lineNumbersSeparator" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="Border"  Property="BorderBrush" Value="{StaticResource TextBoxBorderFocusedBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border"  Property="BorderBrush" Value="{StaticResource TextBoxBorderOverBrush}" />
                        </Trigger>
                        <Trigger Property="Validation.HasError" Value="True">
                            <Setter TargetName="Border"  Property="BorderBrush" Value="{StaticResource TextErrorColorBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />

    </Style>
</ResourceDictionary>